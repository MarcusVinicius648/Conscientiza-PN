{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Marcos09\\\\Documents\\\\VSCode\\\\ConscientizaPN\\\\conscientiza_pn\\\\src\\\\pages\\\\DataPage.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button } from \"../components/Button\";\nimport ImgData from \"../assets/imgdata.png\";\nimport colors from \"../styles/colors\";\nimport fonts from \"../styles/fonts\";\nimport { useNavigation } from '@react-navigation/core';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { TextInputMask } from 'react-native-masked-text';\nexport function DataPage() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cep = _useState4[0],\n      setCep = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _useState6$ = _useState6[0],\n      dataAddress = _useState6$ === void 0 ? {\n    logradouro: \"...\",\n    bairro: '...',\n    localidade: '...',\n    uf: '...'\n  } : _useState6$,\n      setDataAddress = _useState6[1];\n\n  var navigation = useNavigation();\n\n  function handleSetValueName(userName) {\n    setName(userName);\n  }\n\n  function handleSetValueCEP(userCEP) {\n    setCep(userCEP);\n  }\n\n  function handleMoveon() {\n    var OnlyNumber, SearchAddressInformations;\n    return _regeneratorRuntime.async(function handleMoveon$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            SearchAddressInformations = function _SearchAddressInforma() {\n              return _regeneratorRuntime.async(function SearchAddressInformations$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      fetch('https://viacep.com.br/ws/' + OnlyNumber + '/json/').then(function (res) {\n                        return res.json();\n                      }).then(function _callee(data) {\n                        return _regeneratorRuntime.async(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                setDataAddress(dataAddress = data);\n                                _context.next = 3;\n                                return _regeneratorRuntime.awrap(AsyncStorage.setItem('@conscientizaPn:rua', dataAddress.logradouro));\n\n                              case 3:\n                                _context.next = 5;\n                                return _regeneratorRuntime.awrap(AsyncStorage.setItem('@conscientizaPn:bairro', dataAddress.bairro));\n\n                              case 5:\n                                _context.next = 7;\n                                return _regeneratorRuntime.awrap(AsyncStorage.setItem('@conscientizaPn:localidade', dataAddress.localidade));\n\n                              case 7:\n                                _context.next = 9;\n                                return _regeneratorRuntime.awrap(AsyncStorage.setItem('@conscientizaPn:uf', dataAddress.uf));\n\n                              case 9:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, null, null, null, Promise);\n                      }).catch(function (err) {\n                        console.log(err);\n                      });\n\n                    case 1:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            if (!(!name || !cep)) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", Alert.alert(\"Por favor, Preencha todos os campos!ðŸ˜¢\"));\n\n          case 3:\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@conscientizaPn:userName', name));\n\n          case 5:\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@conscientizaPn:cep', cep));\n\n          case 7:\n            OnlyNumber = cep.replace(/\\D/g, '');\n            SearchAddressInformations();\n            navigation.navigate('Home');\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: ImgData,\n    style: styles.img,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Informe seu nome e o seu CEP:\")), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Digite seu nome:\",\n    onChangeText: handleSetValueName,\n    maxLength: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInputMask, {\n    type: 'zip-code',\n    style: styles.input,\n    placeholder: \"Digite seu CEP:\",\n    onChangeText: handleSetValueCEP,\n    keyboardType: 'number-pad',\n    maxLength: 9,\n    value: cep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Confirmar\",\n    onPress: handleMoveon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  content: {\n    flex: 1,\n    width: '100%'\n  },\n  form: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 54,\n    alignItems: 'center',\n    width: '100%'\n  },\n  header: {\n    alignItems: 'center'\n  },\n  label: {\n    marginTop: 20,\n    fontSize: 22,\n    textAlign: 'center',\n    color: colors.heading,\n    fontFamily: fonts.heading\n  },\n  img: {\n    height: Dimensions.get('window').width * 0.4,\n    marginTop: -140,\n    marginLeft: 20\n  },\n  input: {\n    borderBottomWidth: 1,\n    borderColor: colors.gray,\n    color: colors.heading,\n    width: '100%',\n    marginTop: 40,\n    padding: 10,\n    textAlign: 'center'\n  },\n  footer: {\n    marginTop: 50,\n    marginBottom: -100,\n    width: '100%',\n    paddingHorizontal: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/Marcos09/Documents/VSCode/ConscientizaPN/conscientiza_pn/src/pages/DataPage.tsx"],"names":["React","useState","Button","ImgData","colors","fonts","useNavigation","AsyncStorage","TextInputMask","DataPage","name","setName","cep","setCep","dataAddress","logradouro","bairro","localidade","uf","setDataAddress","navigation","handleSetValueName","userName","handleSetValueCEP","userCEP","handleMoveon","SearchAddressInformations","fetch","OnlyNumber","then","res","json","data","setItem","catch","err","console","log","Alert","alert","replace","navigate","styles","container","content","form","header","img","label","input","footer","StyleSheet","create","flex","width","alignItems","justifyContent","paddingHorizontal","marginTop","fontSize","textAlign","color","heading","fontFamily","height","Dimensions","get","marginLeft","borderBottomWidth","borderColor","gray","padding","marginBottom"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n    Text,\r\n    SafeAreaView,\r\n    View,\r\n    Image,\r\n    StyleSheet,\r\n    Dimensions,\r\n    TextInput,\r\n    Alert\r\n} from 'react-native';\r\n\r\nimport { Button } from '../components/Button';\r\n\r\nimport ImgData from '../assets/imgdata.png';\r\nimport colors from '../styles/colors';\r\nimport fonts from '../styles/fonts';\r\n\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport  {TextInputMask}  from 'react-native-masked-text';\r\n\r\n\r\n\r\n\r\nexport function DataPage() {\r\n    \r\n    const[name, setName] = useState<string>();\r\n    const[cep, setCep] = useState<string>();\r\n    \r\n    let [dataAddress = {\r\n        logradouro:\"...\",\r\n        bairro:'...',\r\n        localidade:'...',\r\n        uf:'...',\r\n    \r\n    },setDataAddress] = useState();\r\n    \r\n\r\n\r\n    const navigation = useNavigation();\r\n\r\n    function handleSetValueName(userName:string){\r\n        setName(userName)\r\n    }\r\n    function handleSetValueCEP(userCEP:string){\r\n        setCep(userCEP)\r\n    }\r\n\r\n\r\n    async function handleMoveon() {\r\n        if(!name || !cep)\r\n        return Alert.alert(\"Por favor, Preencha todos os campos!ðŸ˜¢\");\r\n\r\n       \r\n        await AsyncStorage.setItem('@conscientizaPn:userName',name);\r\n        await AsyncStorage.setItem('@conscientizaPn:cep',cep);\r\n\r\n        let OnlyNumber = cep.replace(/\\D/g, '')\r\n        async function SearchAddressInformations(){\r\n          \r\n            fetch('https://viacep.com.br/ws/'+OnlyNumber+'/json/').then(res => res.json()).then(async data =>{\r\n    \r\n                setDataAddress(dataAddress=data)\r\n                await AsyncStorage.setItem('@conscientizaPn:rua',dataAddress.logradouro);\r\n                await AsyncStorage.setItem('@conscientizaPn:bairro',dataAddress.bairro)\r\n                await AsyncStorage.setItem('@conscientizaPn:localidade',dataAddress.localidade)\r\n                await AsyncStorage.setItem('@conscientizaPn:uf',dataAddress.uf)\r\n                \r\n                //console.log(dataAddress)\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            });\r\n            \r\n        }\r\n\r\n        SearchAddressInformations();\r\n        navigation.navigate('Home');\r\n    }\r\n    /*function SearchAddressInformations(userCep:string){\r\n        let OnlyNumber = userCep.replace(/\\D/g, '')\r\n        \r\n        fetch('https://viacep.com.br/ws/'+OnlyNumber+'/json/').then(res => res.json()).then(async data =>{\r\n\r\n            setDataAddress(dataAddress=data)\r\n            await AsyncStorage.setItem('@conscientizaPn:rua',dataAddress.logradouro);\r\n            await AsyncStorage.setItem('@conscientizaPn:bairro',dataAddress.bairro)\r\n            await AsyncStorage.setItem('@conscientizaPn:localidade',dataAddress.localidade)\r\n            await AsyncStorage.setItem('@conscientizaPn:uf',dataAddress.uf)\r\n            \r\n            console,log(dataAddress)\r\n        }).catch();\r\n    }*/\r\n\r\n    return (\r\n\r\n        <SafeAreaView style={styles.container}>\r\n\r\n            <View style={styles.content}>\r\n\r\n                <View style={styles.form}>\r\n\r\n                    <View style={styles.header}>\r\n\r\n                        <Image source={ImgData} style={styles.img} resizeMode=\"contain\" />\r\n\r\n                        <Text style={styles.label}>\r\n                            Informe seu nome e o seu CEP:\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <TextInput style={styles.input} \r\n                        placeholder=\"Digite seu nome:\" \r\n                        onChangeText={handleSetValueName}\r\n                        maxLength={22}\r\n                        />\r\n\r\n                    <TextInputMask\r\n                        type={'zip-code'}\r\n                        style={styles.input} \r\n                        placeholder=\"Digite seu CEP:\" \r\n                        onChangeText={handleSetValueCEP}\r\n                        keyboardType={'number-pad'}\r\n                        maxLength={9}\r\n                        value={cep}\r\n                        \r\n                        />\r\n\r\n                    <View style={styles.footer}>\r\n                        <Button title=\"Confirmar\" onPress={handleMoveon} />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    /*Global -------------------------------------- */\r\n    container: {\r\n        flex: 1,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around'\r\n\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        width: '100%',\r\n\r\n    },\r\n\r\n    /*Texts -------------------------------------- */\r\n    form: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 54,\r\n        alignItems: 'center',\r\n        width: '100%',\r\n\r\n    },\r\n    header: {\r\n        alignItems: 'center',\r\n    },\r\n\r\n    label: {\r\n        marginTop: 20,\r\n\r\n        fontSize: 22,\r\n        textAlign: 'center',\r\n        color: colors.heading,\r\n        fontFamily: fonts.heading\r\n\r\n    },\r\n    /*Img-------------------------------------- */\r\n    img: {\r\n        height: Dimensions.get('window').width * 0.4,\r\n        marginTop: -140,\r\n        marginLeft: 20,\r\n\r\n    },\r\n\r\n    /*Inputs-------------------------------------- */\r\n    input: {\r\n        borderBottomWidth: 1,\r\n        borderColor: colors.gray,\r\n\r\n        color: colors.heading,\r\n\r\n        width: '100%',\r\n        marginTop: 40,\r\n\r\n        padding: 10,\r\n        textAlign: 'center',\r\n    },\r\n\r\n    /*Footer-------------------------------------- */\r\n    footer: {\r\n\r\n        marginTop: 50,\r\n        marginBottom: -100,\r\n        width: '100%',\r\n        paddingHorizontal: 20,\r\n\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}